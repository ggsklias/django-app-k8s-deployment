stages:
  - build
  - deploy_and_get_app_url

variables:
  AWS_ACCESS_KEY_ID: "$AWS_ACCESS_KEY_ID"
  AWS_SECRET_ACCESS_KEY: "$AWS_SECRET_ACCESS_KEY"

build:
  # Use the official docker image.
  image: docker:cli
  stage: build
  services:
    - docker:dind
  variables:
    DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # All branches are tagged with $DOCKER_IMAGE_NAME (defaults to commit ref slug)
  # Default branch is also tagged with `latest`
  script:
    - echo $ALB_DNS
    - echo $CI_REGISTRY_IMAGE
    - echo $CI_COMMIT_REF_SLUG
    - echo $CI_REGISTRY_USER
    - echo $CI_REGISTRY_PASSWORD
    - echo $CI_REGISTRY
    - echo $CI_COMMIT_BRANCH
    - echo $CI_DEFAULT_BRANCH
    - echo $DOCKER_IMAGE_NAME
    - docker build --no-cache --progress plain --pull -t "$DOCKER_IMAGE_NAME" ./djangoarticleapp
    - docker push "$DOCKER_IMAGE_NAME"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
        docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
      fi
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - djangoarticleapp/Dockerfile

deploy_and_get_app_url:
  stage: deploy_and_get_app_url
  before_script:
    - ansible-galaxy collection install kubernetes.core
    - ansible-galaxy collection install community.kubernetes
    - apt-get update && apt-get install -y unzip curl rsync wget tar
  image:
    name: willhallonline/ansible:2.18.2-ubuntu-24.04
    entrypoint: [""]
  variables:
    KUBECONFIG: "/tmp/kubeconfig"
  script:
    - source ./scripts/ansible_helm_and_kube_dependencies.sh
    - ansible-playbook -i provision/ansible/inventory.ini provision/ansible/deploy_app.yml -v
    - wget https://releases.hashicorp.com/terraform/1.10.5/terraform_1.10.5_linux_amd64.zip
    - unzip terraform_1.10.5_linux_amd64.zip -d /usr/local/bin/
    - ./scripts/default_terraform.sh
    - terraform output -raw alb_dns_name
