---
- name: Check if GitLab registry secret exists
  kubernetes.core.k8s_info:
    kind: Secret
    namespace: default
    name: gitlab-registry
  register: secret_info
  ignore_errors: true # Prevents playbook failure if the secret is missing

# Create the dockerconfigjson and convert the username:password to base64 same as kubernetes secret registry needs
- name: Set docker config
  ansible.builtin.set_fact:
    docker_config:
      auths:
        registry.gitlab.com:
          username: "{{ lookup('env', 'GITLAB_USERNAME') }}"
          password: "{{ lookup('env', 'GITLAB_REGISTRY_TOKEN') }}"
          email: "{{ lookup('env', 'GITLAB_EMAIL') }}"
          auth: "{{ (lookup('env', 'GITLAB_USERNAME') + ':' + lookup('env', 'GITLAB_REGISTRY_TOKEN')) | b64encode }}"
  when: secret_info.resources | length == 0  # Run only if the secret does not exist

# Populate the value of {{ docker_config | to_json | b64encode }} in kube_create_gitlab_secret.yml
# This is the value of .dockerconfigjson in the gitlab-registry-secret.yaml.j2 template
- name: Render GitLab registry secret manifest
  ansible.builtin.template:
    src: "{{ lookup('env', 'CI_PROJECT_DIR') }}/provision/k8s-manifests-app/gitlab-registry-secret.yaml.j2"
    dest: /home/{{ ansible_user }}/k8s-manifests-app/gitlab-registry-secret.yaml
    mode: '0644'
  when: secret_info.resources | length == 0

# Apply the GitLab registry secret manifest
- name: Create GitLab registry pull secret using templated file
  kubernetes.core.k8s:
    state: present
    src: /home/{{ ansible_user }}/k8s-manifests-app/gitlab-registry-secret.yaml
  when: secret_info.resources | length == 0


# Replaced the more complicated snippet below with the above snippet

# - name: Create GitLab registry pull secret using k8s module
#   kubernetes.core.k8s:
#     state: present
#     definition: >
#       {{
#         {
#           "apiVersion": "v1",
#           "kind": "Secret",
#           "metadata": {
#             "name": "gitlab-registry",
#             "namespace": "default"
#           },
#           "type": "kubernetes.io/dockerconfigjson",
#           "data": {
#             ".dockerconfigjson": (
#               {
#                 "auths": {
#                   "registry.gitlab.com": {
#                     "username": lookup('env', 'GITLAB_USERNAME'),
#                     "password": lookup('env', 'GITLAB_REGISTRY_TOKEN'),
#                     "email": lookup('env', 'GITLAB_EMAIL'),
#                     "auth": (lookup('env', 'GITLAB_USERNAME') + ':' + lookup('env', 'GITLAB_REGISTRY_TOKEN')) | b64encode
#                   }
#                 }
#               } | to_json | b64encode
#             )
#           }
#         }
#       }}
