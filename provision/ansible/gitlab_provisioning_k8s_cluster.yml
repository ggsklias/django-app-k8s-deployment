# Provisioning through Gitlab CI/CD pipeline
# - name: Wait for SSH on all hosts using inventory_hostname
#   hosts: all
#   gather_facts: no
#   tasks:
#     - name: Wait for SSH to become available
#       wait_for:
#         host: "{{ inventory_hostname }}"
#         port: 22
#         timeout: 300
#         state: started
#       delegate_to: localhost

- name: Install prequisites
  hosts: all
  gather_facts: false # Avoid failures due to incompatible Python version
  become: true
  vars_files:
    - group_vars/all
  roles:
    - prerequisites_amazon_linux_2
    - prepare_os

- name: Install nginx
  hosts: nginx
  gather_facts: true
  become: true
  vars_files:
    - group_vars/all
  roles:
    - nginx

- name: Install kubernetes and and containerd
  hosts: all:!nginx
  gather_facts: true # Avoid failures due to incompatible Python version
  become: true
  vars_files:
    - group_vars/all
  roles:
    - containerd
  tasks:
    - name: Install kubernetes
      ansible.builtin.include_role:
        name: kubernetes
        tasks_from: kube_install_kubernetes.yml

- name: Initialize master
  hosts: master
  gather_facts: true
  become: true
  vars_files:
    - group_vars/all
  tasks:
    - name: Initialize master
      ansible.builtin.include_role:
        name: kubernetes
        tasks_from: kube_initialize_master.yml
      when: hostvars[inventory_hostname].role == "primary"

- name: Add secondary master nodes
  hosts: master
  gather_facts: true
  become: true
  vars_files:
    - group_vars/all
  tasks:
    - name: Add secondary master nodes
      ansible.builtin.include_role:
        name: kubernetes
        tasks_from: kube_add_master_nodes.yml
      when: hostvars[inventory_hostname].role == "secondary"

- name: Configure secondary master nodes to run kubectl
  hosts: master
  gather_facts: true
  become: true
  vars_files:
    - group_vars/all
  tasks:
    - name: Configure secondary master nodes
      ansible.builtin.include_role:
        name: kubernetes
        tasks_from: kube_configure_secondary_master_nodes.yml
      when: hostvars[inventory_hostname].role == "secondary"

- name: Join worker nodes
  hosts: all:!nginx:!master
  gather_facts: true
  become: true
  vars_files:
    - group_vars/all
  tasks:
    - name: Join node
      ansible.builtin.include_role:
        name: kubernetes
        tasks_from: kube_join_node.yml

    - name: Get worker hostname and set it to worker_hostname
      ansible.builtin.include_role:
        name: kubernetes
        tasks_from: kube_get_worker_hostname.yml

    - name: Get worker hostname and set it to worker_hostname
      ansible.builtin.include_role:
        name: kubernetes
        tasks_from: kube_get_locust_hostname.yml

- name: Set node labels to worker nodes so that nodeSelector can be used
  hosts: master
  gather_facts: true
  become: true
  become_user: "{{ ansible_user }}"
  vars_files:
    - group_vars/all
  tasks:
    - name: Get worker hostname and set it to worker_hostname
      ansible.builtin.include_role:
        name: kubernetes
        tasks_from: kube_set_node_labels.yml
      when: hostvars[inventory_hostname].role == "primary"
