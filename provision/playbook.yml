# - hosts: all
#   gather_facts: no  # Avoid failures due to missing Python
#   become: yes
#   vars_files:
#     - group_vars/all
#   roles:
#     - python_install

- hosts: all
  gather_facts: no  # Avoid failures due to missing Python
  become: yes
  vars_files:
    - group_vars/all
  roles:
    - prerequisites_amazon_linux_2

- hosts: all
  gather_facts: yes  # Avoid failures due to missing Python
  become: yes
  vars_files:
    - group_vars/all
  roles:
    - prepare_os

- hosts: all
  gather_facts: yes  # Avoid failures due to missing Python
  become: yes
  vars_files:
    - group_vars/all
  roles:
    - docker_install

- hosts: all
  gather_facts: yes  # Avoid failures due to missing Python
  become: yes
  vars_files:
    - group_vars/all
  tasks:
    - name: Include install_on_all tasks from install_kubernetes role
      include_role:
        name: kubernetes
        tasks_from: install_kubernetes.yml

- hosts: master
  gather_facts: yes  # Avoid failures due to missing Python
  become: yes
  vars_files:
    - group_vars/all
  tasks:
    - name: Initialize master
      include_role:
        name: kubernetes
        tasks_from: initialize_master.yml

- hosts: workers
  gather_facts: yes  # Avoid failures due to missing Python
  become: yes
  vars_files:
    - group_vars/all
  tasks:
    - name: join_node
      include_role:
        name: kubernetes
        tasks_from: join_node.yml


# - hosts: all
#   gather_facts: yes  # Avoid failures due to missing Python
#   become: yes
#   vars_files:
#     - group_vars/all
#   tasks:
#     - name: Install callico to all hosts
#       include_role:
#         name: kubernetes
#         tasks_from: install_calico_to_all_hosts.yml
# - hosts: master
#   gather_facts: yes  # Avoid failures due to missing Python
#   become: yes
#   vars_files:
#     - group_vars/all
#   roles:
#     - project_install
#   tasks:

# - hosts: master
#   gather_facts: yes  # Avoid failures due to missing Python
#   become: yes
#   vars_files:
#     - group_vars/all
#   roles:
#     - start_app

# - hosts: master
#   gather_facts: yes  # Avoid failures due to missing Python
#   become: yes
#   vars_files:
#     - group_vars/all
#   roles:
#     - start_app

# ############################################


# - hosts: workers
#   gather_facts: yes  # Avoid failures due to missing Python
#   become: yes
#   tasks:
#     - name: Print kubeadm_join_command
#       debug:
#         msg: "Print kubeadm_join_command {{ hostvars[groups['master'][0]].kubeadm_join_command }}"

#     - name: Fetch the kubeadm join command from the master node
#       set_fact:
#         kubeadm_join_command: "{{ hostvars[groups['master'][0]].kubeadm_join_command }}"














  # Needed
  # sudo kubeadm init --pod-network-cidr=192.168.0.0/16  --ignore-preflight-errors=all
  #  mkdir -p $HOME/.kube
  # sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  # sudo chown $(id -u):$(id -g) $HOME/.kube/config
  # kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
# sudo kubeadm join 172.31.25.173:6443 --token 393k07.etdorg8mxhg3tij3 \
#        --discovery-token-ca-cert-hash sha256:bfb71735dfe36593a0c138981488ca7e1778f9aaff541f9b96fc785fcda696f0 
  # Not needed:
  # --apiserver-advertise-address=172.31.23.239
  # vars:
  #   ansible_python_interpreter: /usr/bin/python3.8  # Force correct Python path


    # - name: Join worker node to the Kubernetes cluster
    #   shell: "{{ kubeadm_join_command }}"
    #   when: inventory_hostname != 'master'
    #   environment:
    #     KUBECONFIG: /etc/kubernetes/kubelet.conf

# - name: Extract the kubeadm join command
#   set_fact:
#     kubeadm_join_command: >-
#       {{ kubeadm_init_output.stdout | regex_search('kubeadm join (.*?)(\\n\\t|\\s)*$', multiline=True) }}

# - name: Join worker nodes to the cluster
#   hosts: worker_nodes
#   gather_facts: no
#   tasks:
#     - name: Fetch the kubeadm join command from the control plane node
#       slurp:
#         src: /tmp/kubeadm_join_command.txt
#       register: kubeadm_join_file

#     - name: Decode the kubeadm join command
#       set_fact:
#         kubeadm_join_command: "{{ kubeadm_join_file.content | b64decode }}"

#     - name: Join the worker node to the cluster
#       command: "{{ kubeadm_join_command }}"
#       become: yes



#     - name: Set sysctl parameters for Kubernetes
#       sysctl:
#         name: "{{ item.name }}"
#         value: "{{ item.value }}"
#         state: present
#         reload: yes
#       loop:
#         - { name: "net.bridge.bridge-nf-call-iptables", value: "1" }
#         - { name: "net.bridge.bridge-nf-call-ip6tables", value: "1" }







# - hosts: workers
#   become: yes
#   vars:
#     master_ip: "{{ hostvars[groups['master'][0]]['ansible_host'] }}"  # Auto-detect master IP
#   tasks:
#     - name: Join worker nodes to cluster
#       shell: kubeadm join {{ master_ip }}:6443 --token {{ token }} --discovery-token-ca-cert-hash {{ hash }}
