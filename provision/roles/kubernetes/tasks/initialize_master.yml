--- 
- name: Initialize the Kubernetes cluster (if not already initialized)
  command: kubeadm init --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=all 

# Docker container
#--container-runtime=docker --container-runtime-endpoint=unix:///var/run/cri-dockerd.sock --cri-socket=unix:///var/run/dockershim.sock

- name: Create kubeadm token and capture join command
  shell: kubeadm token create --print-join-command
  register: join_command

- name: Set the join command as a fact
  set_fact:
    kubeadm_join_command: "{{ join_command.stdout }}"

- name: Check if folder exists
  ansible.builtin.stat:
    path: $HOME/.kube
  register: folder_check

- name: Set up kubeconfig for kubectl (admin access) on master node -  Execute command if folder does not exist
  become: true
  become_user: "{{ ansible_user }}" 
  shell: |
    mkdir -p $HOME/.kube
    sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    sudo chown $(id -u):$(id -g) $HOME/.kube/config
  when: not folder_check.stat.exists

# - name: Restart Kubelet to apply Docker as container runtime
#   systemd:
#     name: kubelet
#     state: restarted

- name: Wait for API server to respond
  become: true
  become_user: "{{ ansible_user }}" 
  retries: 10
  delay: 30
  command: kubectl get nodes
  register: kubectl_output
  until: kubectl_output.rc == 0

- name: Install Flannel networking on master node
  become: true
  become_user: "{{ ansible_user }}" 
  shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
  # when: inventory_hostname == 'master' and kubeadm_init_output is succeeded

- name: Pause for 2 to wait for flannel to be picked up
  ansible.builtin.pause:
    minutes: 2