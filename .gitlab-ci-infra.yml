stages:
  - provision
  - cleanup

variables:
  AWS_ACCESS_KEY_ID: "$AWS_ACCESS_KEY_ID"
  AWS_SECRET_ACCESS_KEY: "$AWS_SECRET_ACCESS_KEY"

provision_servers_and_install_k8s_cluster:
  stage: provision
  image:
    name: willhallonline/ansible:2.18.2-ubuntu-24.04
    entrypoint: [""]
  script:
    - echo "Building application..."
    - echo "Provisioning EC2 instances using Terraform"
    - apt-get update && apt-get install -y wget unzip
    - apt-get update && apt-get install -y rsync
    - wget https://releases.hashicorp.com/terraform/1.10.5/terraform_1.10.5_linux_amd64.zip
    - unzip terraform_1.10.5_linux_amd64.zip -d /usr/local/bin/
    - terraform version  # Verify installation
    - apt-get update && apt-get install -y unzip curl
    - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip awscliv2.zip
    - ./aws/install
    - aws --version  # Check if installation was successful
    - chmod 755 provision
    - cd provision
    - terraform init
    - python3 provision.py 
    - echo "Wait 90 seconds for the instances to be up and running before connecting with ansible to configure"
    - echo "$SSH_PRIVATE_KEY" > ssh_key.pem
    - chmod 600 ssh_key.pem
    - ls -la
    - aws s3 cp inventory.ini s3://$AWS_BUCKET_NAME/inventory.ini
    - aws s3 cp .terraform.lock.hcl s3://$AWS_BUCKET_NAME/.terraform.lock.hcl
    - aws s3 cp terraform.tfstate s3://$AWS_BUCKET_NAME/terraform.tfstate
    - ansible-playbook -i inventory.ini gitlab_provisioning_k8s_cluster.yml -vv

    
terraform_destroy:
  stage: cleanup
  image:
    name: hashicorp/terraform:light
    entrypoint: [""]
  script:
    - apt-get update && apt-get install -y unzip curl
    - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip awscliv2.zip
    - ./aws/install
    - aws --version  # Check if installation was successful
    - cd provision                # Change to provision directory
    - aws s3 cp s3://$AWS_BUCKET_NAME/.terraform.lock.hcl .terraform.lock.hcl  
    - aws s3 cp s3://$AWS_BUCKET_NAME/terraform.tfstate terraform.tfstate 
    - terraform init              # Re-initialize with saved config
    - terraform destroy -auto-approve  # Run destroy command
    - aws s3 rm s3://$AWS_BUCKET_NAME/inventory.ini
    - aws s3 rm s3://$AWS_BUCKET_NAME/terraform.tfstate
    - aws s3 rm s3://$AWS_BUCKET_NAME/.terraform.lock.hcl
  when: manual                     # Allow manual execution